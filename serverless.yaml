# prefix of stack name
service: checkit-serverless-spike

# choose files in the package pushed to cloud
package:
  # package each function individually
  individually: true
  exclude:
    - node_modules/**
    - .git/**
    - resource-stack/**
    - .vscode/**
    - test-data/**

# serverless plugins
plugins:
  - serverless-iam-roles-per-function

# cloud service provider configuration
provider:
  name: aws
  timeout: 30
  memorySize: 512
  region: 'eu-west-1'
  stage: ${opt:stage, 'dev'}
  profile: ${opt:profile, 'serverless'}
  runtime: nodejs8.10
  deploymentBucket:
    name: ${self:service}-deployment

# project customised settings
custom:
  functionPrefix: ${self:service}
  resourceStack: ${self:service}-resources-${self:provider.stage}

# lamdba configurations
functions:
  helloWorld:
    handler: src/functions/demo/helloWorld.greet
    name: ${self:custom.functionPrefix}-helloWorld
    timeout: 10
    memorySize: 128
    package:
      include:
        - src/functions/demo/helloWorld.js
      exclude:
        - src/functions/shared/**
        - src/functions/hub/**
        - src/functions/demo/**
        - '!src/functions/demo/helloWorld.js'

  showMyName:
    handler: src/functions/demo/showMyName.show
    name: ${self:custom.functionPrefix}-showMyName
    package:
      exclude:
        - src/functions/shared/**
        - src/functions/hub/**
        - src/functions/demo/**
        - '!src/functions/demo/showMyName.js'

  connection:
    handler: src/functions/hub/connection.handler
    name: ${self:custom.functionPrefix}-hub-connection

    package:
      include:
        - src/functions/shared/node_modules/**
        - src/functions/hub/connection.js
      exclude:
        - src/functions/demo/**

    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:BatchWriteItem
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DescribeStream
          - dynamodb:GetRecords
          - dynamodb:GetShardIterator
          - dynamodb:ListStreams
        Resource: arn:aws:dynamodb:eu-west-1:051643391380:table/${self:custom.resourceStack}-hub-connections
    resources:
      Resources:
       HubConnectionsTable:
        Type: AWS::DynamoDB::Table
        Arn: {"Fn::ImportValue" : {"Fn::Sub" : "${self:custom.resourceStack}-HubConnectionsTable"}}